SET SERVEROUTPUT ON;

--TAROLT ELJARAS A MEGLEVO TABLAK TORLESERE
CREATE OR REPLACE TYPE TABLAK_TYPE IS VARRAY(8) OF VARCHAR2(30);
/
DECLARE
    C NUMBER;
    TABLAK TABLAK_TYPE := TABLAK_TYPE('JEGY', 'BIZTOSITAS_KATEGORIAK', 'ERTEKEL',   'UTAS', 'JARAT', 'LEGITARSASAG', 'BIZTOSITAS', 'BIZTOSITO');
    PROCEDURE TOROL_HA_VAN(TABLAK_P IN TABLAK_TYPE) IS
        BEGIN
            FOR I IN 1..TABLAK.COUNT LOOP 
                SELECT COUNT(*) INTO C FROM USER_TABLES WHERE TABLE_NAME = UPPER(TABLAK_P(I));
                IF C = 1 THEN
                    EXECUTE IMMEDIATE 'DROP TABLE "' || TABLAK_P(I) || '"';
                    DBMS_OUTPUT.PUT_LINE(TABLAK_P(I) || ' TOROLVE.');
                END IF;
            END LOOP;               
        END;    
BEGIN  
    TOROL_HA_VAN(TABLAK);
END;
/


CREATE TABLE BIZTOSITO(
    ID NUMBER(4) PRIMARY KEY NOT NULL,
    LEIRAS VARCHAR(200)
);
    
CREATE TABLE BIZTOSITAS(
    ID NUMBER(4) PRIMARY KEY NOT NULL,
    AR NUMBER(8),
    DATUM DATE NOT NULL,
    BIZTOSITOID NUMBER(4) NOT NULL,
    FOREIGN KEY (BIZTOSITOID) REFERENCES BIZTOSITO(ID) ON DELETE CASCADE);
    
CREATE TABLE UTAS(
    FELHASZNALONEV VARCHAR(20) PRIMARY KEY NOT NULL,
    EMAIL VARCHAR(20) NOT NULL, 
    JELSZO VARCHAR(200) NOT NULL,
    BIZTOSITASID NUMBER(4) GENERATED BY DEFAULT AS IDENTITY(START with 2010 INCREMENT by 1) UNIQUE NOT NULL,
    FOREIGN KEY (BIZTOSITASID) REFERENCES BIZTOSITAS(ID) ON DELETE SET NULL);
    
CREATE TABLE LEGITARSASAG(
    NEVE VARCHAR2(30) PRIMARY KEY NOT NULL,
    TULAJDONOS VARCHAR(20) NOT NULL,
    TELEPHELY VARCHAR(20) NOT NULL);    
    
CREATE TABLE JARAT (
    JARATSZAM NUMBER(4) PRIMARY KEY NOT NULL,
    ETKEZES NUMBER(1) NOT NULL,
    SZABAD_HELY NUMBER(4),
     TOBBMEGALLOS NUMBER(2) NOT NULL,
    INDULAS TIMESTAMP NOT NULL,
    ERKEZES TIMESTAMP NOT NULL,  
    HONNAN VARCHAR(20) NOT NULL,
    HOVA VARCHAR(20) NOT NULL,
    LEGITARSASAG VARCHAR(30),
    FOREIGN KEY (LEGITARSASAG) REFERENCES LEGITARSASAG(NEVE) ON DELETE CASCADE);
    
CREATE TABLE JEGY(
    ID NUMBER(4) GENERATED BY DEFAULT AS IDENTITY(START with 6 INCREMENT by 1) PRIMARY KEY NOT NULL, 
    AR NUMBER(8) NOT NULL,
    FELHASZNALONEV VARCHAR(20), 
    JARATSZAM NUMBER(4) NOT NULL,
    FOREIGN KEY (FELHASZNALONEV) REFERENCES UTAS(FELHASZNALONEV) ON DELETE CASCADE,
    FOREIGN KEY (JARATSZAM) REFERENCES JARAT(JARATSZAM) ON DELETE CASCADE);
    
CREATE TABLE BIZTOSITAS_KATEGORIAK(
    ID NUMBER(4) NOT NULL,
    KATEGORIA VARCHAR2(30) NOT NULL,
    FOREIGN KEY (ID) REFERENCES BIZTOSITAS(ID) ON DELETE CASCADE,
    PRIMARY KEY (ID, KATEGORIA));
    
CREATE TABLE ERTEKEL(    
    FELHASZNALONEV VARCHAR(20),
    LEGITARSASAG VARCHAR2(30) NOT NULL,
    ERTEKELES NUMBER(1) NOT NULL,
    FOREIGN KEY (FELHASZNALONEV) REFERENCES UTAS(FELHASZNALONEV) ON DELETE SET NULL,
    FOREIGN KEY (LEGITARSASAG) REFERENCES LEGITARSASAG(NEVE) ON DELETE CASCADE,
    PRIMARY KEY(FELHASZNALONEV, LEGITARSASAG));

CREATE OR REPLACE TRIGGER SZABAD_HELY_T
BEFORE INSERT ON JEGY
FOR EACH ROW
DECLARE
    SZABAD_HELY_V NUMBER;
BEGIN
    SELECT SZABAD_HELY INTO SZABAD_HELY_V FROM JARAT
    WHERE JARAT.JARATSZAM = :NEW.JARATSZAM;
    
    IF SZABAD_HELY_V > 0 THEN
        UPDATE JARAT SET SZABAD_HELY = SZABAD_HELY-1
        WHERE JARAT.JARATSZAM = :NEW.JARATSZAM;    
    ELSE        
        RAISE_APPLICATION_ERROR(-20000, 'Nincs több szabad hely a járaton!');
    END IF;
END;
/


--BIZTOSITOK
INSERT INTO BIZTOSITO VALUES(1001, 'Hello, én a Biztonságos Biztosító vagyok, és nagyon biztonságos vagyok');
INSERT INTO BIZTOSITO VALUES(1002, 'Üdv, én a Megbízható Biztosító vagyok, és nagyon megbízható vagyok');
INSERT INTO BIZTOSITO VALUES(1003, 'Hello, én az Olcsó Biztosító vagyok, és nagyon olcsó vagyok');
INSERT INTO BIZTOSITO VALUES(1004, 'Üdv, én a Legjobb Biztosító vagyok, és én vagyok a legjobb');
INSERT INTO BIZTOSITO VALUES(1005, 'Hello, én a Jó Biztosító vagyok, és nagyon jó vagyok');


--BIZTOSITASOK
DECLARE
    AR_V pls_integer;
    BIZTOSITO_V pls_integer;
    DATUM_V DATE;
    PROCEDURE BIZTOSITAS_FELTOLT IS
        BEGIN    
            FOR I IN 2001..2100 LOOP 
                AR_V := DBMS_RANDOM.VALUE(15000, 90000);
                SELECT TO_DATE(TRUNC(DBMS_RANDOM.VALUE(TO_CHAR(DATE '2021-01-01','J'), TO_CHAR(DATE '2022-04-20','J'))),'J') INTO DATUM_V FROM DUAL;    
                BIZTOSITO_V := DBMS_RANDOM.VALUE(1001, 1005);
                INSERT INTO BIZTOSITAS VALUES(I, AR_V, DATUM_V, BIZTOSITO_V );
            END LOOP;   
        END; 
BEGIN
    BIZTOSITAS_FELTOLT;
END;
/

--UTASOK
INSERT INTO UTAS VALUES('Admin01', 'admin01@gmail.com', 'admin', 2001);
INSERT INTO UTAS VALUES('Admin02', 'admin02@gmail.com', 'admin', 2002);
INSERT INTO UTAS VALUES('Admin03', 'admin03@freemail.hu', 'admin', 2003);
INSERT INTO UTAS VALUES('Admin04', 'admin04@freemail.hu', 'admin', 2004);
INSERT INTO UTAS VALUES('Admin05', 'admin05@freemail.hu', 'admin', 2005);
INSERT INTO UTAS VALUES('User01', 'user01@gmail.com',   'admin', 2006);
INSERT INTO UTAS VALUES('User02', 'user02@gmail.com',   'admin', 2007);
INSERT INTO UTAS VALUES('User03', 'user03@freemail.hu', 'admin', 2008);
INSERT INTO UTAS VALUES('User04', 'user04@freemail.hu', 'admin', 2009);
INSERT INTO UTAS VALUES('User05', 'user05@freemail.hu', 'admin', 2010);

--LEGITARSASAGOK
INSERT INTO LEGITARSASAG VALUES('Léggitársaság Zrt.', 'Repülő Róbert', 'Pápa');
INSERT INTO LEGITARSASAG VALUES('Csak felfelé Rt.', 'Szálló Szilárd', 'Boba');
INSERT INTO LEGITARSASAG VALUES('Turbina Rt.', 'Amelia Earhart', 'Szeged');
INSERT INTO LEGITARSASAG VALUES('Lufthansa', 'Grippen Gergő', 'Székesfehérvár');
INSERT INTO LEGITARSASAG VALUES('Boeing és társa', 'Boeing Bálint', 'Budapest');


--JARATOK
INSERT INTO JARAT VALUES(1001, 0, 10, 0, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'London', 'Budapest', 'Turbina Rt.');
INSERT INTO JARAT VALUES(1002, 0, 20, 0, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'Budapest', 'London', 'Turbina Rt.');
INSERT INTO JARAT VALUES(1003, 0, 14, 0, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'Szeged', 'New York', 'Turbina Rt.');
INSERT INTO JARAT VALUES(1004, 0, 44, 0, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'New York', 'Szeged', 'Turbina Rt.');
INSERT INTO JARAT VALUES(1005, 0,  8, 0, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'Párizs', 'Szeged', 'Turbina Rt.');
INSERT INTO JARAT VALUES(1006, 0,  9, 0, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'Róma', 'Budapest', 'Lufthansa');
INSERT INTO JARAT VALUES(1007, 0, 31, 1, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'Berlin', 'Budapest', 'Lufthansa');
INSERT INTO JARAT VALUES(1008, 0, 45, 1, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'Budapest', 'Róma', 'Lufthansa');
INSERT INTO JARAT VALUES(1009, 0,  9, 2, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'Szeged', 'Párizs', 'Lufthansa');
INSERT INTO JARAT VALUES(1010, 0, 78, 2, TO_TIMESTAMP('2022 01 01 12:30:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 01 17:30:00','YYYY MM DD HH24:MI:SS'), 'Budapest', 'Párizs', 'Lufthansa');

INSERT INTO JARAT VALUES(1011, 1, 10, 0, TO_TIMESTAMP('2022 01 02 11:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 15:00:00','YYYY MM DD HH24:MI:SS'), 'London', 'Budapest', 'Léggitársaság Zrt.');
INSERT INTO JARAT VALUES(1012, 1, 20, 0, TO_TIMESTAMP('2022 01 02 12:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 16:00:00','YYYY MM DD HH24:MI:SS'), 'Budapest', 'London', 'Turbina Rt.');
INSERT INTO JARAT VALUES(1013, 1, 14, 0, TO_TIMESTAMP('2022 01 02 13:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 17:00:00','YYYY MM DD HH24:MI:SS'), 'Szeged', 'New York', 'Boeing és társa');
INSERT INTO JARAT VALUES(1014, 1, 45, 0, TO_TIMESTAMP('2022 01 02 14:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 18:00:00','YYYY MM DD HH24:MI:SS'), 'New York', 'Szeged', 'Turbina Rt.');
INSERT INTO JARAT VALUES(1015, 1,  8, 0, TO_TIMESTAMP('2022 01 02 15:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 19:00:00','YYYY MM DD HH24:MI:SS'), 'Párizs', 'Szeged', 'Turbina Rt.');
INSERT INTO JARAT VALUES(1016, 0,  9, 0, TO_TIMESTAMP('2022 01 02 16:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 20:00:00','YYYY MM DD HH24:MI:SS'), 'Róma', 'Budapest', 'Csak felfelé Rt.');
INSERT INTO JARAT VALUES(1017, 0, 31, 0, TO_TIMESTAMP('2022 01 02 17:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 21:30:00','YYYY MM DD HH24:MI:SS'), 'Berlin', 'Budapest', 'Lufthansa');
INSERT INTO JARAT VALUES(1018, 0, 45, 1, TO_TIMESTAMP('2022 01 02 18:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 22:30:00','YYYY MM DD HH24:MI:SS'), 'Budapest', 'Róma', 'Léggitársaság Zrt.');
INSERT INTO JARAT VALUES(1019, 0,  9, 1, TO_TIMESTAMP('2022 01 02 19:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 02 23:30:00','YYYY MM DD HH24:MI:SS'), 'Szeged', 'Párizs', 'Lufthansa');
INSERT INTO JARAT VALUES(1020, 0, 78, 2, TO_TIMESTAMP('2022 01 02 20:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 03 00:30:00','YYYY MM DD HH24:MI:SS'), 'Budapest', 'Párizs', 'Csak felfelé Rt.');
INSERT INTO JARAT VALUES(1021, 0, 8,  2, TO_TIMESTAMP('2022 01 03 10:00:00','YYYY MM DD HH24:MI:SS'), TO_TIMESTAMP('2022 01 03 14:30:00','YYYY MM DD HH24:MI:SS'), 'Berlin', 'Szeged', 'Turbina Rt.');


--JEGYEK
CREATE OR REPLACE TYPE UTAS_TYPE IS VARRAY(10) OF VARCHAR2(20);
/
DECLARE
    AR_V pls_integer;
    UTAS_V UTAS_TYPE := UTAS_TYPE('Admin01', 'Admin02', 'Admin03', 'Admin04', 'Admin05', 'User01', 'User02', 'User03', 'User04', 'User05');
    R_V pls_integer;
    JARAT_V pls_integer;
    PROCEDURE JEGY_FELTOLT IS
        BEGIN    
            FOR I IN 1..50 LOOP 
                AR_V := DBMS_RANDOM.VALUE(10000, 30000);
                R_V := DBMS_RANDOM.VALUE(1, 10);                
                JARAT_V := DBMS_RANDOM.VALUE(1001, 1021);         
                INSERT INTO JEGY VALUES(I, AR_V, UTAS_V(R_V), JARAT_V);
            END LOOP;   
    END; 
BEGIN
    JEGY_FELTOLT;
END;
/

--BIZTOSITAS_KATEGORIAK
CREATE OR REPLACE TYPE KATEGORIAK_TYPE IS VARRAY(7) OF VARCHAR2(30);
/
DECLARE
    KATEG_V pls_integer;
    KATEGORIAK KATEGORIAK_TYPE := KATEGORIAK_TYPE('jogvédelem', 'poggyászbiztosítás', 'balesetbiztosítás lvl1',   'balesetbiztosítás lvl2', 'balesetbiztosítás lvl3', 'balesetbiztosítás lvl4', 'balesetbiztosítás lvl5');   
    PROCEDURE KATEG_FELTOLT(KATEG_P IN KATEGORIAK_TYPE) IS
        BEGIN    
            FOR I IN 2001..2100 LOOP 
                KATEG_V := DBMS_RANDOM.VALUE(1,7);
                INSERT INTO BIZTOSITAS_KATEGORIAK VALUES(I, KATEGORIAK(KATEG_V));
            END LOOP;   
        END; 
BEGIN
    KATEG_FELTOLT(KATEGORIAK);
END;
/

--ERTEKELESEK
CREATE OR REPLACE TYPE UTAS_TYPE IS VARRAY(10) OF VARCHAR2(20);
/
CREATE OR REPLACE TYPE LEGITARSASAG_TYPE IS VARRAY(5) OF VARCHAR2(30);
/
DECLARE
    UTAS_V UTAS_TYPE := UTAS_TYPE('Admin01', 'Admin02', 'Admin03', 'Admin04', 'Admin05', 'User01', 'User02', 'User03', 'User04', 'User05');
    LEGITARSASAG_V LEGITARSASAG_TYPE := LEGITARSASAG_TYPE('Léggitársaság Zrt.', 'Csak felfelé Rt.', 'Turbina Rt.', 'Lufthansa', 'Boeing és társa');  
    R_V pls_integer;
    ERTEKELES_V pls_integer;
    PROCEDURE ERTEKEL_FELTOLT IS
        BEGIN    
            FOR I IN 1..LEGITARSASAG_V.COUNT  LOOP 
                R_V := DBMS_RANDOM.VALUE(1, 10);                
                ERTEKELES_V := DBMS_RANDOM.VALUE(1, 5);                
                INSERT INTO ERTEKEL VALUES(UTAS_V(R_V), LEGITARSASAG_V(I), ERTEKELES_V);
            END LOOP;   
    END; 
BEGIN
    ERTEKEL_FELTOLT;
END;
/

--integritást ellenőrző UPDATE triggerek
CREATE OR REPLACE TRIGGER i_biztosito
BEFORE UPDATE OF ID ON BIZTOSITO
FOR EACH ROW
BEGIN
    UPDATE BIZTOSITAS SET BIZTOSITOID = :NEW.ID
    WHERE BIZTOSITOID = :OLD.ID;
END;
/

CREATE OR REPLACE TRIGGER i_biztositas
BEFORE UPDATE OF ID ON BIZTOSITAS
FOR EACH ROW
BEGIN
    UPDATE UTAS SET BIZTOSITASID = :NEW.ID
    WHERE BIZTOSITASID = :OLD.ID;
    
    UPDATE BIZTOSITAS_KATEGORIAK SET ID = :NEW.ID
    WHERE ID = :OLD.ID;
END;
/


CREATE OR REPLACE TRIGGER i_legitarsasag
BEFORE UPDATE OF NEVE ON LEGITARSASAG
FOR EACH ROW
BEGIN
    UPDATE JARAT SET LEGITARSASAG = :NEW.NEVE
    WHERE LEGITARSASAG = :OLD.NEVE;
    
    UPDATE ERTEKEL SET LEGITARSASAG = :NEW.NEVE
    WHERE LEGITARSASAG = :OLD.NEVE;
    
END;
/


CREATE OR REPLACE TRIGGER i_utas
BEFORE UPDATE OF FELHASZNALONEV ON UTAS
FOR EACH ROW
BEGIN
    UPDATE JEGY SET FELHASZNALONEV = :NEW.FELHASZNALONEV
    WHERE FELHASZNALONEV = :OLD.FELHASZNALONEV;
    
    UPDATE ERTEKEL SET FELHASZNALONEV = :NEW.FELHASZNALONEV
    WHERE FELHASZNALONEV = :OLD.FELHASZNALONEV;
END;
/


CREATE OR REPLACE TRIGGER i_jarat
BEFORE UPDATE OF JARATSZAM ON JARAT
FOR EACH ROW
BEGIN
    UPDATE JEGY SET JARATSZAM = :NEW.JARATSZAM
    WHERE JARATSZAM = :OLD.JARATSZAM;
    
END;
/


--módosításra figyelmeztető triggerek
CREATE OR REPLACE TRIGGER BIZTOSITAS_ACTION
AFTER INSERT OR UPDATE OR DELETE ON BIZTOSITAS
DECLARE
BEGIN
     IF INSERTING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosítás(ok)hozzáadva.');
     ELSIF UPDATING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosítás(ok)frissítve.');
     ELSIF DELETING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosítás(ok) törölve.');
     END IF;
END;
/


CREATE OR REPLACE TRIGGER BIZTOSITAS_KATEGORIAK_ACTION
AFTER INSERT OR UPDATE OR DELETE ON BIZTOSITAS_KATEGORIAK
DECLARE
BEGIN
     IF INSERTING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosítás kategória hozzáadva.');
     ELSIF UPDATING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosítás kategória frissítve.');
     ELSIF DELETING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosítás kategória törölve.');
     END IF;
END;
/


CREATE OR REPLACE TRIGGER BIZTOSITO_ACTION
AFTER INSERT OR UPDATE OR DELETE ON BIZTOSITO
DECLARE
BEGIN
     IF INSERTING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosító(k) hozzáadva.');
     ELSIF UPDATING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosító(k) frissítve.');
     ELSIF DELETING THEN
          DBMS_OUTPUT.PUT_LINE('Biztosító(k) törölve.');
     END IF;
END;
/


CREATE OR REPLACE TRIGGER ERTEKEL_ACTION
AFTER INSERT OR UPDATE OR DELETE ON ERTEKEL
DECLARE
BEGIN
     IF INSERTING THEN
          DBMS_OUTPUT.PUT_LINE('Értékelés(ek) hozzáadva.');
     ELSIF UPDATING THEN
          DBMS_OUTPUT.PUT_LINE('Értékelés(ek) frissítve.');
     ELSIF DELETING THEN
          DBMS_OUTPUT.PUT_LINE('Értékelés(ek) törölve.');
     END IF;
END;
/


CREATE OR REPLACE TRIGGER JARAT_ACTION
AFTER INSERT OR UPDATE OR DELETE ON JARAT
DECLARE
BEGIN
     IF INSERTING THEN
          DBMS_OUTPUT.PUT_LINE('Járat(ok) hozzáadva.');
     ELSIF UPDATING THEN
          DBMS_OUTPUT.PUT_LINE('Járat(ok) frissítve.');
     ELSIF DELETING THEN
          DBMS_OUTPUT.PUT_LINE('Járat(ok) törölve.');
     END IF;
END;
/


CREATE OR REPLACE TRIGGER JEGY_ACTION
AFTER INSERT OR UPDATE OR DELETE ON JEGY
DECLARE
BEGIN
     IF INSERTING THEN
          DBMS_OUTPUT.PUT_LINE('Jegy(ek) hozzáadva.');
     ELSIF UPDATING THEN
          DBMS_OUTPUT.PUT_LINE('Jegy(ek) frissítve.');
     ELSIF DELETING THEN
          DBMS_OUTPUT.PUT_LINE('Jegy(ek) törölve.');
     END IF;
END;
/


CREATE OR REPLACE TRIGGER LEGITARSASAG_ACTION
AFTER INSERT OR UPDATE OR DELETE ON LEGITARSASAG
DECLARE
BEGIN
     IF INSERTING THEN
          DBMS_OUTPUT.PUT_LINE('Légitársaság(ok) hozzáadva.');
     ELSIF UPDATING THEN
          DBMS_OUTPUT.PUT_LINE('Légitársaság(ok) frissítve.');
     ELSIF DELETING THEN
          DBMS_OUTPUT.PUT_LINE('Légitársaság(ok) törölve.');
     END IF;
END;
/


CREATE OR REPLACE TRIGGER UTAS_ACTION
AFTER INSERT OR UPDATE OR DELETE ON UTAS
DECLARE
BEGIN
     IF INSERTING THEN
          DBMS_OUTPUT.PUT_LINE('Utas(ok)hozzáadva.');
     ELSIF UPDATING THEN
          DBMS_OUTPUT.PUT_LINE('Utas(ok)frissítve.');
     ELSIF DELETING THEN
          DBMS_OUTPUT.PUT_LINE('Utas(ok) törölve.');
     END IF;
END;
/
